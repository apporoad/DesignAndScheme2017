paas ip21  192.168.3.233  docker swarm1   node1
paas ip22  192.168.3.234  docker swarm2   node2
paas ip23  192.168.3.235  docker swarm3   node3

集群信息:

etc服务器:node1:2379
swarm manage: node2:3376
swarm-node1: node1:2375
swarm-node2: node2:2375
swarm-node3: node3:2375

准备

在所有的机器上安装dokcer
在centos-node1 上docker pull ystyle/etcd 
在所有机器上dokcer pull swarm
以上三步可以用docker-machine完成
开放所有机器的2375端口, centos-node1的2379端口,centos-node2的3376端口

安装etcd k-v数据库
在centos-node1上执行:
export HOSTIP=192.168.3.233
docker run -d -v /etc/ssl/certs:/etc/ssl/certs -p 4001:4001 -p 2380:2380 -p 2379:2379  --name etcd ystyle/etcd -name etcd0 -advertise-client-urls http://${HOSTIP}:2379,http://${HOSTIP}:4001 -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 -initial-advertise-peer-urls http://${HOSTIP}:2380 -listen-peer-urls http://0.0.0.0:2380 -initial-cluster-token etcd-cluster-1 -initial-cluster etcd0=http://${HOSTIP}:2380 -initial-cluster-state new

加入集群

在centos-node1执行:
docker run -d swarm join --addr=192.168.3.233:2375 etcd://192.168.3.233:2379/swarm
在centos-node2执行:
docker run -d swarm join --addr=192.168.3.234:2375 etcd://192.168.3.233:2379/swarm
在centos-node3执行:
docker run -d swarm join --addr=192.168.3.235:2375 etcd://192.168.3.233:2379/swarm

启动swarm manage

在centos-node2上执行

# 启动swarm manage
docker run -d -p 3376:3376 -t swarm manage -H 0.0.0.0:3376 etcd://192.168.3.233:2379/swarm
 
# 检查swarm节点列表
docker run --rm swarm list etcd://192.168.3.233:2379/swarm
 
# 查看swarm集群信息
export DOCKER_HOST=192.168.3.234:3376  
docker info
 
# 测试
docker run --rm -p 8080:80 nginx:alpine  
docker ps -a # 查看nginx安装到哪台机器上了
 
curl -L http://nginx_host:8080



